// Generated by CoffeeScript 1.9.1
(function() {
  var debounce;

  module.exports = debounce = function(o, fn) {
    var accrued, args, check, execute, hitTime, immediate, lastHitTime, maxWait, reset, that, timer, wait;
    wait = o.wait, maxWait = o.maxWait, immediate = o.immediate;
    wait = wait || 0;
    maxWait = maxWait || Infinity;
    accrued = 0;
    timer = hitTime = args = that = lastHitTime = void 0;
    execute = function() {
      var result;
      result = fn.apply(that, args);
      accrued = lastHitTime = 0;
      reset();
      return result;
    };
    reset = function() {
      return clearTimeout(timer);
    };
    check = function() {
      hitTime = new Date();
      if (lastHitTime) {
        accrued += hitTime - lastHitTime;
      } else if (immediate) {
        lastHitTime = hitTime;
        return execute();
      }
      lastHitTime = hitTime;
      if (accrued >= maxWait) {
        return execute();
      } else {
        reset();
        timer = setTimeout(execute, wait);
      }
      return null;
    };
    return function() {
      args = arguments;
      that = this;
      return check();
    };
  };

}).call(this);
