// Generated by CoffeeScript 1.9.2

/*
	Returns the primitive type of a value as a lowercase string.
 */

(function() {
  var fn, i, key, len, typeOf, types;

  module.exports = typeOf = function(val) {
    var type;
    type = Object.prototype.toString.call(val).slice(8, -1).toLowerCase();
    if (type === 'number' && isNaN(val)) {
      type = 'nan';
    }
    return type;
  };

  types = ['Undefined', 'Boolean', 'String', 'Function', 'Array', 'Object', 'Null', 'Number', 'Date', 'RegExp', 'NaN'];

  fn = function(key) {
    var lowerKey;
    lowerKey = key.toLowerCase();
    return typeOf[key] = function(val) {
      return typeOf(val) === lowerKey;
    };
  };
  for (i = 0, len = types.length; i < len; i++) {
    key = types[i];
    fn(key);
  }

}).call(this);
