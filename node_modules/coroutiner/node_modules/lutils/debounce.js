// Generated by CoffeeScript 1.9.2
(function() {
  var debounce;

  module.exports = debounce = function(o, fn) {
    var args, cancel, context, immediate, maxWait, result, run, timeout, wait;
    timeout = result = context = args = null;
    wait = o.wait, maxWait = o.maxWait, immediate = o.immediate;
    run = function() {
      result = fn.apply(context, args);
      return cancel();
    };
    cancel = function() {
      clearTimeout(timeout);
      return timeout = null;
    };
    return function() {
      args = arguments;
      context = this;
      if (timeout) {
        cancel();
      } else if (immediate) {
        run();
      }
      if (!immediate) {
        timeout = setTimeout(run, wait);
      }
      return result;
    };
  };


  /*
  module.exports = (o, fn) ->
  	{ wait, maxWait, immediate } = o
  
  	 * TODO: make immediate work properly
  	 * it currently goes off twice when accruement goes off
  	 * may need to set a "firstTime" variable or something
  
  	wait	= wait or 0
  	maxWait	= maxWait or Infinity
  	accrued	= 0
  	timer	= hitTime = args = that = lastHitTime = undefined
  
  	execute	= ->
  		result = fn.apply that, args
  
  		accrued = lastHitTime = 0
  		reset()
  
  		return result
  
  	reset = -> clearTimeout timer
  
  	check = ->
  		hitTime = new Date()
  
  		if lastHitTime
  			accrued += hitTime - lastHitTime
  		else if immediate
  			lastHitTime	= hitTime
  			return execute()
  
  		lastHitTime	= hitTime
  
  		if accrued >= maxWait
  			return execute()
  		else
  			reset()
  			timer = setTimeout execute, wait
  
  		return null
  
  	return ->
  		args	= arguments
  		that	= this
  		return check()
   */

}).call(this);
